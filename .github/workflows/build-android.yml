name: Build Android APK (Capacitor)

on:
  push:
    branches: [ main ]
    paths:
      - "src/**/*"
      - "public/**/*"
      - "package.json"
      - "vite.config.js"
      - "capacitor.config.json"
      - ".github/workflows/build-android.yml"
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            api/package-lock.json

      # 关键修复：直接安装 Capacitor 并指定入口执行，避免命令查找问题
      - name: Install dependencies (stable Capacitor setup)
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          # 1. 先安装核心依赖（解决 Pinia 冲突）
          npm install pinia@^2.2.4 pinia-plugin-persistedstate@3.2.1
          # 2. 单独安装 Capacitor 并验证入口文件
          npm install @capacitor/cli@^6.1.0 @capacitor/core@^6.1.0 @capacitor/android@^6.1.0
          # 3. 安装其他项目依赖
          npm install
          # 4. 直接通过 Node.js 执行 Capacitor 入口，绕开 bin 命令问题
          if ! node node_modules/@capacitor/cli/bin/cap.js --version; then
            echo "Error: Capacitor CLI not found"
            exit 1
          fi

      - name: Install API dependencies
        run: |
          cd api
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install
          cd ..

      - name: Build frontend with Vite
        run: |
          npm run build
          [ -d "dist" ] || { echo "Vite build failed (dist missing)"; exit 1; }

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          android-version: 34
          build-tools-version: 34.0.0

      # 核心修复：通过 Node.js 直接执行 Capacitor 入口文件，不依赖 bin 命令
      - name: Set up Capacitor Android (direct execution)
        run: |
          # 直接调用 Capacitor 入口文件执行命令
          node node_modules/@capacitor/cli/bin/cap.js add android
          node node_modules/@capacitor/cli/bin/cap.js sync android
          [ -d "android" ] || { echo "Capacitor Android project missing"; exit 1; }

      - name: Build Android Debug APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleDebug --no-daemon --stacktrace
          [ -f "app/build/outputs/apk/debug/app-debug.apk" ] || { echo "APK missing"; exit 1; }

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: MoeKoe-Music-Android-Debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30
